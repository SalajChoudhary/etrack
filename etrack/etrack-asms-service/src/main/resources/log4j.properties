#### Use two appenders, one to log to console, another to log to a file
log4j.rootLogger=fatal, stdout, R
# Print only messages of priority WARN or higher for your category
#log4j.category.your.category.name=WARN
# Specifically inherit the priority level
#log4j.category.your.category.name=INHERITED

#### First appender writes to console
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target =System.out
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern = [%5p : %d{dd MMM yyyy hh:mm:ss a} ] in: (%C:%M():%L) - %m%n
#log4j.appender.stdout.layout.ConversionPattern = [%d{dd MMM yyyy hh:mm:ss} %5p] - %m%n


# Pattern to output the caller's file name and line number.
#log4j.appender.stdout.layout.ConversionPattern=%5p [%t] (%F:%L) - %m%n

#### Second appender writes to a file
log4j.appender.R=org.apache.log4j.RollingFileAppender
#log4j.appender.R.File=/apps/logs/applications/etrack/etrack-asms.log
log4j.appender.R.File=C:/Users/sxchoudh/documents/repo/etrack-asms-service/etrack-asms.log
log4j.appender.R.layout=org.apache.log4j.PatternLayout
log4j.appender.R.layout.ConversionPattern = [%5p : %d{dd MMM yyyy hh:mm:ss a} ] in: (%C:%M():%L) - %m%n


#log4j.appender.R.File - This is set in the Init Servlet Log4jInit @ package gov.doh.hcs.chrc.common.log;
# Control the maximum log file size
log4j.appender.R.MaxFileSize=20MB
# Archive log files (one backup file here)
log4j.appender.R.MaxBackupIndex=3
#log4j.additivity=false - incorrect format
	
#log4j.appender.R.layout.ConversionPattern=%p %t %c - %m%n
log4j.logger.dec.ny.gov.etrack.asms=INFO
log4j.logger.org.springframework=INFO
